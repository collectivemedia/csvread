% Generated by roxygen2 (4.0.1): do not edit by hand
\name{int64}
\alias{[.int64}
\alias{[<-.int64}
\alias{[[.int64}
\alias{as.character.int64}
\alias{as.data.frame.int64}
\alias{as.double.int64}
\alias{as.int64}
\alias{as.int64.NULL}
\alias{as.int64.character}
\alias{as.int64.default}
\alias{as.int64.factor}
\alias{as.int64.numeric}
\alias{as.integer.int64}
\alias{as.list.int64}
\alias{c.int64}
\alias{format.int64}
\alias{int64}
\alias{is.int64}
\alias{is.na.int64}
\alias{is.numeric.int64}
\alias{print.int64}
\alias{rep.int64}
\title{A very basic 64-bit integer class.}
\usage{
int64(length = 0)

is.int64(x)

\method{as.int64}{default}(x, ...)

\method{as.int64}{factor}(x, ...)

\method{as.int64}{character}(x, base = 10L, ...)

\method{as.int64}{numeric}(x, ...)

\method{as.int64}{NULL}(x, ...)

\method{format}{int64}(x, ...)

\method{print}{int64}(x, ...)

\method{as.character}{int64}(x, base = NULL, ...)

\method{as.double}{int64}(x, ...)

\method{as.integer}{int64}(x, ...)

\method{is.na}{int64}(x, ...)

\method{as.data.frame}{int64}(x, ...)

\method{as.list}{int64}(x, ...)

\method{c}{int64}(...)

\method{is.numeric}{int64}(x)

\method{rep}{int64}(x, ...)
}
\arguments{
\item{x}{Object to be coerced or tested}

\item{length}{A non-negative integer specifying the desired length.
Double values will be coerced to integer: supplying an argument of
length other than one is an error.}

\item{...}{Further arguments passed to or from other methods.}

\item{base}{Specifies the base of the number (default is the base attribute of the object).}
}
\description{
A very basic 64-bit integer class.
}
\details{
The \code{int64} class stores 64-bit integers in vectors of doubles and the
base as an attribute \code{base} of the vector for printing and conversion to
character. The motivation behind this class is to give R the ability to load
64-bit integers directly, for example, to represent the commonly used 64-bit
identifiers in relational and other databases.
}
\seealso{
Ops.int64 csvread
}

