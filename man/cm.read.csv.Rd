% Generated by roxygen2 (4.0.1): do not edit by hand
\name{cm.read.csv}
\alias{cm.read.csv}
\alias{csvread}
\title{Fast CSV reader with a given set of column types.}
\usage{
csvread(file, coltypes, header, colnames = NULL, nrows = NULL,
  verbose = F, delimiter = ",")
}
\arguments{
\item{file}{Path to the CSV file.}

\item{coltypes}{A vector of column types, e.g., \code{c("integer", "string")}.
       The accepted types are "integer", "double", "string", "long" and "longhex".
\itemize{
\item \code{integer} - the column is parsed into an R integer type (32 bit)
\item \code{double} - the column is parsed into an R double type
\item \code{string} - the column is loaded as character type
\item \code{long} - the column is interpreted as the decimal representation of a 64-bit
             integer, stored as a double and assigned the \code{\link{int64}} class.
\item \code{longhex} - the column is interpreted as the hex representation of a 64-bit
             integer, stored as a double and assigned the \code{\link{int64}} class
             with an additional attribute \code{base = 16L} that is used for printing.
\item \code{verbose} - if \code{TRUE}, the function prints number of lines counted in the file.
\item \code{delimiter} - a single character delimiter, defalut is \code{","}.
}}

\item{header}{TRUE (default) or FALSE; indicates whether the file has a header
and serves as the source of column names if \code{colnames} is not provided.}

\item{colnames}{Optional column names for the resulting data frame. Overrides the header, if header is present.
If NULL, then the column names are taken from the header, or, if there is no header,
the column names are set to 'COL1', 'COL2', etc.}

\item{nrows}{If NULL, the function first counts the lines in the file. This step can be avoided if the number
of lines is known by providing a value to \code{nrows}. On the other hand, \code{nrows} can be
used to read only the first lines of the CSV file.}

\item{verbose}{If \code{TRUE}, the function prints number of lines counted in the file.}

\item{delimiter}{A single character delimiter, defalut is \code{","}.}
}
\value{
A data frame containing the data from the CSV file.
}
\description{
Given a list of the column types, parses the CSV file and returns a data frame.
The first step is counting the number of lines in the file, which can be avoided
if the number of rows is known by providing the \code{nrows} argument.
}
\details{
If number of columns, which is inferred from the number of provided \code{coltypes}, is greater than
the actual number of columns, the extra columns are still created. If the number of columns is
less than the actual number of columns in the file, the extra columns in the file are ignored.
Commas included in double quotes will be considered part of the field, rather than a separator, but
double quotes will NOT be stripped. Runaway double quotes will end at the end of the line.
}
\examples{
\dontrun{
   frm <- cm.read.csv(file="myfile.csv",
          coltypes=c("integer", "longhex", "double", "string", "long"),
          header=F, nrows=10)
}
}
\seealso{
\code{\link{int64}} \code{\link{utils::read.csv}}
}
\keyword{comma-separated}
\keyword{csv}
\keyword{import}
\keyword{text}

